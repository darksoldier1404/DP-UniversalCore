import static sun.security.util.Debug.println


plugins {
    id 'java'
    id 'groovy'
    id 'maven-publish'
}

group 'github.com/darksoldier1404'
version = '1.0.0.1'

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.darksoldier1404.duc'
            artifactId = 'DP-UniversalCore'
            version = version

            from components.java
        }
    }
}
jar {
    enabled(true)
    manifest {
        attributes 'Main-Class': 'com.darksoldier1404.duc.DP-UniversalCore'
    }
}

//compileJava.options.encoding = 'UTF-8'
//tasks.withType(JavaCompile) {
//    options.encoding = 'UTF-8'
//}


task DS_BUILD {
    doFirst {
        def v = buildFile.getText().find(version)
        def (major, minor, patch, build) = v.tokenize('.')
        int newBuild = build.toInteger() + 1
        String newVersion = major + "." + minor + "." + patch + "." + newBuild
        String updatedVersion = buildFile.getText().replaceFirst("version = '" + v + "'", "version = '" + newVersion + "'")
        buildFile.setText(updatedVersion)
        println "Version Updated. : " + newVersion

        sourceSets.main.resources.srcDirs().getFiles().forEach(o -> {
            if (o.getName().equals("plugin.yml")) {
                List<String> lines = new ArrayList<String>()
                String line
                File f = o
                FileReader fr = new FileReader(f)
                BufferedReader br = new BufferedReader(fr)
                while ((line = br.readLine()) != null) {
                    if (line.contains("version"))
                        line = line.replace("version: " + version.toString(), "version: " + newVersion)
                    lines.add(line + "\n")
                }
                fr.close()
                br.close()

                BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(f), "UTF-8"));
                for (String s : lines)
                    out.write(s)
                out.flush()
                out.close()
            }
        })
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url "https://papermc.io/repo/repository/maven-public/" }
    maven {
        name "essentialsx-releases"
        url "https://repo.essentialsx.net/releases/"
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven {
        url "https://org.bstats/bstats-bukkit"
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    compileOnly "io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT"
    compileOnly 'net.essentialsx:EssentialsX:2.19.0'
    compileOnly 'org.spigotmc:spigot:1.17-R0.1-SNAPSHOT'
    compileOnly "org.bstats:bstats-bukkit:2.2.1"
}

test {
    useJUnitPlatform()
}